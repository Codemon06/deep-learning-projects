# #initialising the GUI (creating windows, buttons and functions).
# #creating GUI main window first.
# top=tk.Tk()
# top.geometry('800x600')
# top.title('Image Classifier')
# top.configure(background='#CDCDCD')
# label=Label(top,background='#CDCDCD', font=('arial',15,'bold'))
# given_image = Label(top)

# #classify function to predict and classify the uploaded test image to give output.
# def classify(file_path):
#     global label_packed
#     image = Image.open(file_path)
#     image = image.resize((30,30))
#     image = np.expand_dims(image, axis=0)
#     image = np.array(image)
#     print(image.shape)
#     predict_classes = model.predict([image])[0] 
#     pred = np.argmax(predict_classes)
#     sign = class_names[pred+1]
#     print(sign)
#     label.configure(foreground='#011638', text=sign) 
    
# #creating classify button ui that gives output on click.
# def show_classify_button(file_path):
#     classify_b=Button(top,text="Classify Image",command=lambda: classify(file_path),padx=10,pady=5)
#     classify_b.configure(background='#364156', foreground='white',font=('arial',10,'bold'))
#     classify_b.place(relx=0.79,rely=0.46)

# #uplaod function that lets test image from local device to be uploaded for classification.
# def upload_image(): 
#     try:
#         file_path=filedialog.askopenfilename()
#         uploaded=Image.open(file_path)
#         uploaded.thumbnail(((top.winfo_width()/2.25),(top.winfo_height()/2.25)))
#         im=ImageTk.PhotoImage(uploaded)
        
#         given_image.configure(image=im)
#         given_image.image=im
#         label.configure(text='')
#         show_classify_button(file_path)
#     except:
#         pass

# #upload button ui created that lets us upload test image for classification on click.
# upload=Button(top,text="Upload an image",command=upload_image,padx=10,pady=5)
# upload.configure(background='#364156', foreground='white',font=('arial',10,'bold'))
# upload.pack(side=BOTTOM,pady=50)
# given_image.pack(side=BOTTOM,expand=True)
# label.pack(side=BOTTOM,expand=True)

# #heading and loops
# heading = Label(top, text="Know the Image",pady=20, font=('arial',20,'bold'))
# heading.configure(background='#CDCDCD',foreground='#364156')
# heading.pack()
# top.mainloop()